---
test_name: Signup a user and login

stages:
  - name: Test Signup a user
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/auth/signup"
      method: POST
      json:
        email: "test{tavern.env_vars.TEST_TIMESTAMP}@test.com"
        password: "mypass"
        display_name: "Test User {tavern.env_vars.TEST_TIMESTAMP}"
        age: 25
        gender: "Male"
    response:
      status_code: 201
      headers:
        content-type: application/json
      json:
        user:
          user_id: !anystr
          email: "test{tavern.env_vars.TEST_TIMESTAMP}@test.com"
          age: 25
          gender: "Male"
          signup_date: !anystr
          preferences: ""
          user_preferences: []
          views: []
        token: !anystr
      save:
        json:
          user_id: "user.user_id"
          signup_date: "user.signup_date"

  - name: Test Login with same user
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/auth/login"
      method: POST
      json:
        email: "test{tavern.env_vars.TEST_TIMESTAMP}@test.com"
        password: "mypass"
    response:
      status_code: 200
      headers:
        content-type: application/json
      json:
        user:
          user_id: "{user_id}"
          email: "test{tavern.env_vars.TEST_TIMESTAMP}@test.com"
          age: 25
          gender: "Male"
          signup_date: "{signup_date}"
          preferences: ""
          user_preferences: []
          views: []
        token: !anystr
      save:
        json:
          token: "token"

  - name: Get categories to find valid category ID
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/users/categories"
      method: GET
      headers:
        Authorization: "Bearer {token}"
        Content-Type: "application/json"
    response:
      status_code: 200
      save:
        json:
          first_category_id: "[0].category_id"
          second_category_id: "[1].category_id"

  - name: Test Set Preferences
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/users/preferences"
      method: POST
      headers:
        Authorization: "Bearer {token}"
        Content-Type: "application/json"
      json:
        category_ids: ["{first_category_id}", "{second_category_id}"]
    response:
      status_code: 200
      headers:
        content-type: application/json
      json:
        user:
          user_id: "{user_id}"
          email: "test{tavern.env_vars.TEST_TIMESTAMP}@test.com"
          age: 25
          gender: "Male"
          signup_date: "{signup_date}"
          preferences: !anystr
          user_preferences:
            - category_id: "{first_category_id}"
              name: !anystr
              subcategories: []
            - category_id: "{second_category_id}"
              name: !anystr
              subcategories: []
          views: []
        token: !anystr

---
test_name: Test Boundary Values for User Data

stages:
  - name: Signup with minimum age
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/auth/signup"
      method: POST
      json:
        email: "test{tavern.env_vars.TEST_TIMESTAMP}_minage@test.com"
        password: "password123"
        display_name: "MinAge User {tavern.env_vars.TEST_TIMESTAMP}"
        age: 1
        gender: "Male"
    response:
      status_code: 201

  - name: Signup with maximum reasonable age
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/auth/signup"
      method: POST
      json:
        email: "test{tavern.env_vars.TEST_TIMESTAMP}_maxage@test.com"
        password: "password123"
        display_name: "MaxAge User {tavern.env_vars.TEST_TIMESTAMP}"
        age: 120
        gender: "Female"
    response:
      status_code: 201

  - name: Signup with very long email (but valid format)
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/auth/signup"
      method: POST
      json:
        email: "test{tavern.env_vars.TEST_TIMESTAMP}_verylongemailaddressfortesting@test.com"
        password: "password123"
        display_name: "LongEmail User {tavern.env_vars.TEST_TIMESTAMP}"
        age: 25
        gender: "Male"
    response:
      status_code: 201

  - name: Login and get token for cart tests
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/auth/login"
      method: POST
      json:
        email: "test{tavern.env_vars.TEST_TIMESTAMP}_minage@test.com"
        password: "password123"
    response:
      status_code: 200
      save:
        json:
          token: "token"
          user_id: "user.user_id"

  - name: Add maximum quantity to cart
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/cart/{user_id}"
      method: POST
      headers:
        Authorization: "Bearer {token}"
        Content-Type: "application/json"
      json:
        user_id: "{user_id}"
        product_id: "1"
        quantity: 999
    response:
      status_code: 204

  - name: Verify large quantity in cart
    request:
      url: "{tavern.env_vars.TEST_FRONTEND_URL}/cart/{user_id}"
      method: GET
      headers:
        Authorization: "Bearer {token}"
        Content-Type: "application/json"
    response:
      status_code: 200
      json:
        - user_id: "{user_id}"
          product_id: "1"
          quantity: 999
